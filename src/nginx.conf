# Minimal Nginx SQL Reverse Proxy
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

# HTTP block for health checks and basic info
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';
    
    access_log /var/log/nginx/access.log main;
    
    server {
        listen 5000;
        server_name _;
        
        location /health {
            return 200 '{"status":"healthy","service":"sql-proxy","timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }
        
        location /status {
            return 200 '{"sql_servers":{"server1":{"proxy_port":1433,"backend":"$SQL_SERVER_1_HOSTNAME"},"server2":{"proxy_port":1434,"backend":"$SQL_SERVER_2_HOSTNAME"}},"status":"running"}\n';
            add_header Content-Type application/json;
        }
        
        location / {
            return 200 '{"service":"dbx-aca-sql-proxy","version":"1.0","usage":{"description":"TCP proxy for SQL Server connections","server1":{"port":1433,"database":"$SQL_DATABASE_1_NAME","jdbc":"jdbc:sqlserver://<container_fqdn>:1433;databaseName=$SQL_DATABASE_1_NAME"},"server2":{"port":1434,"database":"$SQL_DATABASE_2_NAME","jdbc":"jdbc:sqlserver://<container_fqdn>:1434;databaseName=$SQL_DATABASE_2_NAME"}}}\n';
            add_header Content-Type application/json;
        }
    }
}

# Stream block for TCP proxying (SQL Server connections)
stream {
    log_format proxy '$remote_addr [$time_local] $protocol $bytes_sent $bytes_received $session_time';
    access_log /var/log/nginx/stream.log proxy;
    
    # SQL Server 1 Proxy (port 1433 -> SQL_SERVER_1_HOSTNAME:1433)
    upstream sql_server_1 {
        server $SQL_SERVER_1_HOSTNAME:1433;
    }
    
    server {
        listen 1433;
        proxy_pass sql_server_1;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 5s;
        error_log /var/log/nginx/sql1_error.log;
    }
    
    # SQL Server 2 Proxy (port 1434 -> SQL_SERVER_2_HOSTNAME:1433)  
    upstream sql_server_2 {
        server $SQL_SERVER_2_HOSTNAME:1433;
    }
    
    server {
        listen 1434;
        proxy_pass sql_server_2;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 5s;
        error_log /var/log/nginx/sql2_error.log;
    }
}
